<?xml version='1.0' standalone='yes'?>
<PLUGIN>

############################################
# YAMJ Plugin by Dan Kessler
# Release Version v0.1
############################################

############################################
# cleanup file
############################################
<FILE Name="/tmp/yamj-cleanup" Run="/bin/bash">
<INLINE>
<![CDATA[
# Cleanup previous plugin installation
[ -f /etc/rc.d/rc.yamj ] && rm --force /etc/rc.d/rc.yamj
[ -d /usr/local/emhttp/plugins/yamj ] && rm --force --recursive /usr/local/emhttp/plugins/yamj
rm /tmp/yamj-cleanup
]]>
</INLINE>
</FILE>

############################################
# Get Icon file
############################################
<FILE Name="/tmp/yamj-icon" Run="/bin/bash">
<INLINE>
<![CDATA[
# Get icon
wget --quiet --spider --no-check-certificate https://raw.github.com/theone11/yamj_plugin/master/yamj.png
if [ $? == "0" ] ; then
  wget --quiet --no-check-certificate -O /boot/config/plugins/yamj/yamj.png https://raw.github.com/theone11/yamj_plugin/master/yamj.png > /dev/null 2>&1
  logger -trc.yamj -plocal7.info -is "Icon downloaded from icon hosting server"
else
  logger -trc.yamj -plocal7.info -is "No icon to download from icon hosting server"
fi
if [ -f /boot/config/plugins/yamj/yamj.png ] ; then
  mkdir --parents /usr/local/emhttp/plugins/yamj
  cp --force /boot/config/plugins/yamj/yamj.png /usr/local/emhttp/plugins/yamj/yamj.png
  logger -trc.yamj -plocal7.info -is "Icon copied to emhttp plugin folder"
else
  logger -trc.yamj -plocal7.info -is "Icon does not exist locally - cannot copy to emhttp plugin folder"
fi
rm /tmp/yamj-icon
]]>
</INLINE>
</FILE>

############################################
# configuration file
############################################
# UPGRADE_PLG_ON_BOOT    - Check and Install new plugin version if exists on hosting server during array mount (true/false)
# YAMJ_ADD_CRON_ON_BOOT  - Add CRON job during array mount (true/false)
# YAMJ_LOCATION          - Location (folder) of existing YAMJ installation
# YAMJ_DOWNLOAD_LOCATION - Location (folder) for YAMJ download
############################################
<FILE Name="/boot/config/plugins/swapfile/swapfile.cfg">
<INLINE>
<![CDATA[
# Swap File plugin configuration
UPGRADE_PLG_ON_BOOT="false"
YAMJ_ADD_CRON_ON_BOOT="false"
YAMJ_LOCATION="/mnt/cache/YAMJ/FLASH"
YAMJ_DOWNLOAD_LOCATION="/mnt/cache/YAMJ/Download"
]]>
</INLINE>
</FILE>

############################################
# rc.yamj file
############################################
<FILE Name="/etc/rc.d/rc.yamj" Mode="0770">
<INLINE>
<![CDATA[
#!/bin/sh

#################
# W R I T E C F G
#################
write_cfg()
{
  echo "# YAMJ plugin configuration" > ${SWAP_PLUGIN_PATH}/yamj.cfg

  echo "UPGRADE_PLG_ON_BOOT=\"$UPGRADE_PLG_ON_BOOT\"" >> ${SWAP_PLUGIN_PATH}/yamj.cfg
  echo "YAMJ_ADD_CRON_ON_BOOT=\"$YAMJ_ADD_CRON_ON_BOOT\"" >> ${SWAP_PLUGIN_PATH}/yamj.cfg
  echo "YAMJ_LOCATION=\"$YAMJ_LOCATION\"" >> ${SWAP_PLUGIN_PATH}/yamj.cfg
  echo "YAMJ_DOWNLOAD_LOCATION=\"$YAMJ_DOWNLOAD_LOCATION\"" >> ${SWAP_PLUGIN_PATH}/yamj.cfg

  logger -trc.yamj -plocal7.info -is "Plugin configuration written"
}

#################
# W R I T E S T A T U S
#################
write_status()
{
  echo "# YAMJ status" > /usr/local/emhttp/plugins/yamj/yamj.status

  echo "YAMJ_PLG_HOSTING_SERVER_EXISTS=\"$YAMJ_PLG_HOSTING_SERVER_EXISTS\"" >> /usr/local/emhttp/plugins/yamj/yamj.status
  echo "YAMJ_PLG_ONLINE_EXIST=\"$YAMJ_PLG_ONLINE_EXIST\"" >> /usr/local/emhttp/plugins/yamj/yamj.status
  echo "YAMJ_PLG_ONLINE_VER=\"$YAMJ_PLG_ONLINE_VER\"" >> /usr/local/emhttp/plugins/yamj/yamj.status
  echo "YAMJ_PLG_LOCAL_VER=\"$YAMJ_PLG_LOCAL_VER\"" >> /usr/local/emhttp/plugins/yamj/yamj.status
  echo "YAMJ_SNP_HOSTING_SERVER_EXISTS=\"$YAMJ_SNP_HOSTING_SERVER_EXISTS\"" >> /usr/local/emhttp/plugins/yamj/yamj.status
  echo "YAMJ_SNP_ONLINE_EXIST=\"$YAMJ_SNP_ONLINE_EXIST\"" >> /usr/local/emhttp/plugins/yamj/yamj.status
  echo "YAMJ_SNP_ONLINE_VER=\"$YAMJ_SNP_ONLINE_VER\"" >> /usr/local/emhttp/plugins/yamj/yamj.status
  echo "YAMJ_SNP_ONLINE_REV=\"$YAMJ_SNP_ONLINE_REV\"" >> /usr/local/emhttp/plugins/yamj/yamj.status
  echo "YAMJ_FNL_HOSTING_SERVER_EXISTS=\"$YAMJ_FNL_HOSTING_SERVER_EXISTS\"" >> /usr/local/emhttp/plugins/yamj/yamj.status
  echo "YAMJ_FNL_ONLINE_EXIST=\"$YAMJ_FNL_ONLINE_EXIST\"" >> /usr/local/emhttp/plugins/yamj/yamj.status
  echo "YAMJ_FNL_ONLINE_VER=\"$YAMJ_FNL_ONLINE_VER\"" >> /usr/local/emhttp/plugins/yamj/yamj.status
  echo "YAMJ_LOCAL_VER=\"$YAMJ_LOCAL_VER\"" >> /usr/local/emhttp/plugins/yamj/yamj.status
  echo "YAMJ_DOWN_VER=\"$YAMJ_DOWN_VER\"" >> /usr/local/emhttp/plugins/yamj/yamj.status
}

#################
# S T A R T
#################
yamj_start()
{

}

####################
# G E T O N L I N E V E R S I O N
####################
yamj_getonlineversion()
{
  # YAMJ snapshot hosting server by lainie
  YAMJ_SNP_HOSTING_SERVER="mediaplayersite.com/YAMJ_Latest"
  # Get online/offline status of YAMJ snapshot hosting server
  wget --quiet --spider $YAMJ_SNP_HOSTING_SERVER
  YAMJ_SNP_HOSTING_SERVER_EXISTS=$?
  # Check if YAMJ snapshot hosting server is online
  if [ "$YAMJ_SNP_HOSTING_SERVER_EXISTS" == "0" ] ; then
    # Get latest version number from server
    YAMJ_SNP_ONLINE_VER=$(wget ${YAMJ_SNP_HOSTING_SERVER} -q -O - | grep "Current version: " | awk 'gsub(/.*Current version: |-SNAPSHOT.*/,"")')
    YAMJ_SNP_ONLINE_REV=$(wget ${YAMJ_SNP_HOSTING_SERVER} -q -O - | grep "Latest revision: r" | awk 'gsub(/.*Latest revision: r| .*/,"")')
  else
    # Set version to server_down - does not exist
    YAMJ_SNP_ONLINE_VER="server_down"
    YAMJ_SNP_ONLINE_REV="server_down"
  fi
  # YAMJ snapshot filename
  YAMJ_SNP_ONLINE_FILENAME="yamj-${YAMJ_SNP_ONLINE_VER}-SNAPSHOT-r${YAMJ_SNP_ONLINE_REV}-bin.zip"
  # YAMJ snapshot hosting server URL
  YAMJ_SNP_URL="http://mediaplayersite.com/sites/default/files/YAMJ"
  # Check if YAMJ snapshot file exists online
  wget --quiet --spider ${YAMJ_SNP_URL}/${YAMJ_SNP_ONLINE_FILENAME}
  YAMJ_SNP_ONLINE_EXIST=$?

  # YAMJ Stable hosting server
  YAMJ_FNL_HOSTING_SERVER="http://code.google.com/p/moviejukebox"
  # Get online/offline status of YAMJ Stable hosting server
  wget --quiet --spider $YAMJ_FNL_HOSTING_SERVER
  YAMJ_FNL_HOSTING_SERVER_EXISTS=$?
  # Check if YAMJ Stable hosting server is online
  if [ "$YAMJ_FNL_HOSTING_SERVER_EXISTS" == "0" ] ; then
    # Get latest version number from server
    YAMJ_FNL_ONLINE_VER=$(wget ${YAMJ_FNL_HOSTING_SERVER} -q -O - | grep "Moviejukebox v" | awk 'gsub(/.*Moviejukebox v| .*/,"")')
    YAMJ_FNL_ONLINE_REV=$(wget ${YAMJ_FNL_HOSTING_SERVER} -q -O - | grep "Moviejukebox v" | awk 'gsub(/.*Featured r| .*/,"")')
  else
    # Set version to server_down - does not exist
    YAMJ_FNL_ONLINE_VER="server_down"
    YAMJ_FNL_ONLINE_REV="server_down"
  fi
  # VirtualBox Extension package filename
  YAMJ_FNL_ONLINE_FILENAME="moviejukebox-${YAMJ_FNL_ONLINE_VER}.zip"
  # VirtualBox Extension package hosting server URL
  YAMJ_FNL_URL="http://moviejukebox.googlecode.com/files"
  # Check if VirtualBox Extension package file exists online
  wget --quiet --spider ${YAMJ_FNL_URL}/${YAMJ_FNL_ONLINE_FILENAME}
  YAMJ_FNL_ONLINE_EXIST=$?

  # Write status to update WEBUI
  write_status
}

###################
# G E T L O C A L V E R S I O N
###################
virtualbox_getlocalversion()
{
  # Newest local Virtualbox package filename and version
  VBOX_PKG_LOCAL_FILENAME=$(ls -1Art ${VBOX_PLUGIN_PATH}/vbox-*.tgz 2>/dev/null | tail -n1)
  VBOX_PKG_LOCAL_VER=$(ls -1Art ${VBOX_PLUGIN_PATH}/vbox-*.tgz 2>/dev/null | tail -n1 | awk 'gsub(/.*vbox-|-unRAID.*/,"")')
  VBOX_PKG_LOCAL_KERNEL=$(ls -1Art ${VBOX_PLUGIN_PATH}/vbox-*.tgz 2>/dev/null | tail -n1 | awk 'gsub(/.*unRAID-|.tgz.*/,"")')
  # Newest local Virtualbox Extension package filename and version
  VBOX_EXT_LOCAL_FILENAME=$(ls -1Art ${VBOX_PLUGIN_PATH}/Oracle_VM_VirtualBox_Extension_Pack-*.vbox-extpack 2>/dev/null | tail -n1)
  VBOX_EXT_LOCAL_VER=$(ls -1Art ${VBOX_PLUGIN_PATH}/Oracle_VM_VirtualBox_Extension_Pack-*.vbox-extpack 2>/dev/null | tail -n1 | awk 'gsub(/.*Extension_Pack-|.vbox-extpack.*/,"")')

  # Check if VirtualBox installed and get version
  if [ -f /opt/VirtualBox/VBoxManage ] ; then
    # Get VirtualBox full version including revision
    VBOX_PKG_INSTALLED_VER_TEMP=$(vboxmanage -v)
    # Extract VirtualBox version only
    VBOX_PKG_INSTALLED_VER=${VBOX_PKG_INSTALLED_VER_TEMP%%r*}
  else
    VBOX_PKG_INSTALLED_VER="not_installed"
  fi

  # Check if VirtualBox Extension installed and get version
  if [ -f /opt/VirtualBox/ExtensionPacks/Oracle_VM_VirtualBox_Extension_Pack/ExtPack.xml ] ; then
    VBOX_EXT_INSTALLED_VER_TEMP=$(vboxmanage list extpacks | grep -A 1 "Oracle VM VirtualBox Extension Pack" | tail -n 1 | grep $VBOX_PKG_INSTALLED_VER)
    VBOX_EXT_INSTALLED_VER=${VBOX_EXT_INSTALLED_VER_TEMP:${#VBOX_EXT_INSTALLED_VER_TEMP} - $(expr length $VBOX_PKG_INSTALLED_VER)}
  else
    VBOX_EXT_INSTALLED_VER="not_installed"
  fi

  # Write status to update WEBUI
  write_status
}

#################
# G E T P L G V E R S I O N S
#################
yamj_getplgversions()
{
  # Swap file Plugin hosting server
  YAMJ_PLG_HOSTING_SERVER="https://github.com/theone11/yamj_plugin"
  # Swap file Plugin hosting server URL + filename
  YAMJ_PLG_URL="https://raw.github.com/theone11/swapfile_plugin/master/yamj.plg"
  # Get online/offline status of swap file Plugin hosting server
  wget --quiet --spider --no-check-certificate $YAMJ_PLG_HOSTING_SERVER
  YAMJ_PLG_HOSTING_SERVER_EXISTS=$?
  # Check if swap file Plugin hosting server is online
  if [ "$YAMJ_PLG_HOSTING_SERVER_EXISTS" == "0" ] ; then
    # Check if swap file Plugin file exists online
    wget --quiet --spider --no-check-certificate $YAMJ_PLG_URL
    YAMJ_PLG_ONLINE_EXIST=$?
    if [ "$YAMJ_PLG_ONLINE_EXIST" == "0" ] ; then
      # Get latest version number from server
      YAMJ_PLG_ONLINE_VER=$(wget --no-check-certificate --quiet $YAMJ_PLG_URL -O - | grep -m 1 "Release Version v" | awk 'gsub(/.*Release Version v|*/,"")')
    else
      YAMJ_PLG_ONLINE_VER="no_online_plg"
    fi
  else
    # Set version to server_down - does not exist
    YAMJ_PLG_ONLINE_VER="server_down"
  fi

  # Check if local swap file Plugin file exists
  if [ -f /boot/config/plugins/yamj.plg ] ; then
    # Get existing version number from local file
    YAMJ_PLG_LOCAL_VER=$(grep -m 1 "Release Version v" /boot/config/plugins/yamj.plg | awk 'gsub(/.*Release Version v|*/,"")')
  else
    # Set version to no_local_plg - does not exist
    YAMJ_PLG_LOCAL_VER="no_local_plg"
  fi

  # Write status to update WEBUI
  write_status
}

#######################
# U P D A T E P L G
#######################
swapfile_updateplg()
{
  # Get online and local plugin versions
  swapfile_getplgversions

  # Check if Plugin hosting server is online
  if [ "$SWAP_PLG_HOSTING_SERVER_EXISTS" == "0" ] ; then
    # Check if latest version is available on server
    if [ "$SWAP_PLG_ONLINE_EXIST" == "0" ] ; then
      # Check if online and local versions are different
      if [ "$SWAP_PLG_ONLINE_VER" != "$SWAP_PLG_LOCAL_VER" ] ; then
        # Check if local plugin doesn't exist
        if [ "$SWAP_PLG_LOCAL_VER" == "no_local_plg" ] ; then
          logger -trc.swapfile -plocal7.info -is "Local plugin does not exist. Installing latest plugin version from hosting server (v$SWAP_PLG_ONLINE_VER)"
        else
          logger -trc.swapfile -plocal7.info -is "Upgrading local plugin (v$SWAP_PLG_LOCAL_VER) to hosting server plugin (v$SWAP_PLG_ONLINE_VER)"
        fi
        # Download new swap file Plugin version
        wget --no-check-certificate --quiet $SWAP_PLG_URL -O /boot/config/plugins/swapfile.plg
        # Install new swap file Plugin
        /usr/local/sbin/installplg /boot/config/plugins/swapfile.plg
        logger -trc.swapfile -plocal7.info -is "New/Updated plugin installation complete"
      # Swap file plugin hosting server is offline
      else
        logger -trc.swapfile -plocal7.info -is "Local plugin is the same version as on hosting server (v$SWAP_PLG_LOCAL_VER)"
      fi
    # Online version and local version are the same
    else
      logger -trc.swapfile -plocal7.info -is "Plugin does not exist on plugin hosting server - Cannot download new plugin"
    fi
  else
    logger -trc.swapfile -plocal7.info -is "Swap file Plugin hosting servers is OFFLINE - Cannot check for new packages versions"
  fi
}

###################
# B O O T
###################
swapfile_boot()
{
  # Check if new plugin should be updated on boot
  if [ $UPGRADE_PLG_ON_BOOT == "true" ] ; then
    logger -trc.swapfile -plocal7.info -is "Checking for swap file plugin update during array mount ..."
    swapfile_updateplg
  # Plugin update should not be done during boot
  else
    logger -trc.swapfile -plocal7.info -is "Swap file plugin update during array mount is disabled"
  fi

  # Check if swap file should be started during boot
  if [ $SWAP_ENABLE_ON_BOOT == "true" ] ; then
    logger -trc.swapfile -plocal7.info -is "Starting swap file during array mount ..."
    swapfile_start
  else
    logger -trc.swapfile -plocal7.info -is "Swap file start during array mount is disabled"
  fi
}

###################
# M A I N
###################

[ -f /boot/config/plugins/swapfile/swapfile.cfg ] && source /boot/config/plugins/swapfile/swapfile.cfg
[ -f /usr/local/emhttp/plugins/swapfile/swapfile.status ] && source /usr/local/emhttp/plugins/swapfile/swapfile.status

# Swapfile plugin folder on boot flash drive
SWAP_PLUGIN_PATH="/boot/config/plugins/swapfile"

# Copy below parameters for swapfile_start() function - uses "NEW" parameters
SWAP_LOCATION_NEW=$SWAP_LOCATION
SWAP_FILENAME_NEW=$SWAP_FILENAME
SWAP_NAME_NEW=$SWAP_NAME
SWAP_SIZE_MB_NEW=$SWAP_SIZE_MB

if [ $1 == "updatecfg" ] ; then
  UPGRADE_PLG_ON_BOOT=$2
  SWAP_ENABLE_ON_BOOT=$3
  SWAP_DELETE=$4
  SWAP_LOCATION_NEW=$5
  SWAP_FILENAME_NEW=$6
  SWAP_NAME_NEW=$7
  SWAP_SIZE_MB_NEW=$8

	# Check if swap file exists
	if [ -f ${SWAP_LOCATION}/${SWAP_FILENAME} ]; then
    # Save "SWAP_DELETE" parameter value
    SWAP_DELETE_SAVE=$SWAP_DELETE
    # Check if swap file location of filename changed
    if [ "${SWAP_LOCATION}/${SWAP_FILENAME}" !=  "${SWAP_LOCATION_NEW}/${SWAP_FILENAME_NEW}" ] || [ "$SWAP_NAME" != "$SWAP_NAME_NEW" ] || [ "$SWAP_SIZE_MB" != "$SWAP_SIZE_MB_NEW" ] ; then
      logger -trc.swapfile -plocal7.info -is "New swap file configuration is being implemented"
      # Enable deletion of existing swap file (if exists)
      SWAP_DELETE="true"
      # Restart swap file with new configuration (STOP uses "OLD" parameters and "START" uses "NEW" parameters
      SWAP_RUNNING=$(swapon -s | grep ${SWAP_LOCATION_NEW}/${SWAP_FILENAME_NEW} | cut -d" " -f1)
      # Check if swap file already started
      if [ "$SWAP_RUNNING" == "${SWAP_LOCATION_NEW}/${SWAP_FILENAME_NEW}" ] ; then
        # Recreate and restart swap file
        logger -trc.swapfile -plocal7.info -is "Restarting swap file with new configuration ..."
        swapfile_restart
      #Swap file not running
      else
        # Just remove existing swap file - will be recreated on next start
        logger -trc.swapfile -plocal7.info -is "Removing previous existing swap file ..."
        swapfile_stop
      fi
    fi
    # Restore "SWAP_DELETE" parameter value
    SWAP_DELETE=$SWAP_DELETE_SAVE
  fi

  SWAP_LOCATION=$SWAP_LOCATION_NEW
  SWAP_FILENAME=$SWAP_FILENAME_NEW
  SWAP_NAME=$SWAP_NAME_NEW
  SWAP_SIZE_MB=$SWAP_SIZE_MB_NEW

  write_cfg
else
  case "$1" in
    'start')
      swapfile_start
    ;;
    'stop')
      swapfile_stop
    ;;
    'restart')
      swapfile_restart
    ;;
    'writecfg')
      write_cfg
    ;;
    'updateplg')
      swapfile_updateplg
    ;;
    'getplgversions')
      swapfile_getplgversions
    ;;
    'boot')
      swapfile_boot
    ;;

    *)
      echo "usage $0 start | stop | restart | updatecfg | implement | writecfg | updateplg | getplgversions"
  esac
fi
]]>
</INLINE>
</FILE>

############################################
# Event handlers
############################################
<FILE Name="/usr/local/emhttp/plugins/swapfile/event/disks_mounted" Mode="0770">
<INLINE>
<![CDATA[
#!/bin/bash
/etc/rc.d/rc.swapfile boot
]]>
</INLINE>
</FILE>

<FILE Name="/usr/local/emhttp/plugins/swapfile/event/unmounting_disks" Mode="0770">
<INLINE>
<![CDATA[
#!/bin/bash
/etc/rc.d/rc.swapfile stop
]]>
</INLINE>
</FILE>

############################################
# Files required to hook the plugin into the unRaid webGui menu system
############################################

############################################
# The page file defines which menu page the plugin will appear on
############################################
<FILE Name="/usr/local/emhttp/plugins/swapfile/swapfile.page">
<INLINE>
<![CDATA[
Menu="NetworkServices"
Icon="swapfile.png"
Version=""
Author="Dan Kessler"
Type="php"
Title="Swap File"
]]>
</INLINE>
</FILE>

############################################
# WEBUI page
############################################
<FILE Name="/usr/local/emhttp/plugins/swapfile/swapfile.php">
<INLINE>
<![CDATA[

<?PHP
shell_exec("/etc/rc.d/rc.swapfile getplgversions");

$swapfile_cfg = parse_ini_file("/boot/config/plugins/swapfile/swapfile.cfg");
$swapfile_status = parse_ini_file("/usr/local/emhttp/plugins/swapfile/swapfile.status");

$swapfile_location = $swapfile_cfg['SWAP_LOCATION'];
$swapfile_filename = $swapfile_cfg['SWAP_FILENAME'];

$plg_server = $swapfile_status['SWAP_PLG_HOSTING_SERVER_EXISTS'];
$plg_online_exist = $swapfile_status['SWAP_PLG_ONLINE_EXIST'];
$plg_online_ver = $swapfile_status['SWAP_PLG_ONLINE_VER'];
$plg_loc_ver = $swapfile_status['SWAP_PLG_LOCAL_VER'];

$swapfile_exists = (file_exists($swapfile_location."/".$swapfile_filename)) ? "Yes" : "No";

shell_exec("swapon -s > /tmp/swapfile_summary.txt 2>&1");
$swapfile_summary = file("/tmp/swapfile_summary.txt", FILE_IGNORE_NEW_LINES);
$swapfile_summary_cnt = count($swapfile_summary);

$swapfile_running = "No";
$swapfile_size = 0;
$swapfile_usage = 0;
for ($i=0; $i<$swapfile_summary_cnt; $i++)
{
  $pos = strpos($swapfile_summary[$i], $swapfile_location."/".$swapfile_filename);
  if (($pos !== false) && ($pos == 0))
  {
    $swapfile_running = "Yes";
    $split_string = preg_split("/\s+/", $swapfile_summary[$i]);
    $swapfile_fullpath = $split_string[0];
    $swapfile_size = $split_string[2];
    $swapfile_usage = $split_string[3];
  }
}

$percentage = round(((float)$swapfile_usage)/((float)$swapfile_size)*100);

$control_actions_exist = "false";
$version_actions_exist = "false";
?>

<HTML>
<HEAD></HEAD>
<BODY>

<div style="width: 49%; float:left; border: 0px solid black;">
  <div id="title">
    <span class="left">Status summary</span>
  </div>

  <br></br>

  <div style="border: 0px solid black;">
    Swap file exists:
      <?if ($swapfile_exists == "Yes") :?>
        <span class="green-text"><b> &#10004</b></span>
      <?else:?>
        <span class="orange-text"><b> &#10006</b></span>
      <?endif;?>
    <br></br>
    Swap file in use:
    <?if ($swapfile_running == "Yes"):?>
      <span class="green-text"><b> &#10004</b></span>
      <br></br>
      Swap file location and filename: <b><?=$swapfile_fullpath?></b>
      <br></br>
      <div>
        <div style="width: 35%; float:left; border: 0px solid black;">
          Swap file size: <b><?=printf("%0.1f",$swapfile_size/1024);?> MB</b>
        </div>
        <div style="width: 25%; float:left; border: 0px solid black;">
          used: <b><?=printf("%0.1f",$swapfile_usage/1024);?> MB</b>
        </div>
        <div style="width: 35%; float:left; border: 0px solid black;">
          <?if ($percentage <= 50) :?>
            <div style="background:#CCCCCC; border:1px solid #666666; height:15px; width:100px;">
              <div style="background:#6fa239; height:15px; width:<?=$percentage;?>px;"><center><?=$percentage;?>%</center></div>
            </div>
          <?elseif ($percentage <= 75) :?>
            <div style="background:#CCCCCC; border:1px solid #666666; height:15px; width:100px;">
              <div style="background:#ff9900; height:15px; width:<?=$percentage;?>px;"><center><?=$percentage;?>%</center></div>
            </div>
          <?elseif ($percentage <= 100) :?>
            <div style="background:#CCCCCC; border:1px solid #666666; height:15px; width:100px;">
              <div style="color:#ffffff; background:#cc0000; height:15px; width:<?=$percentage;?>px;"><center><?=$percentage;?>%</center></div>
            </div>
          <?endif;?>
        </div>
      </div>
    <?else:?>
      <span class="orange-text"><b> &#10006</b></span>
    <?endif;?>
    <br></br>
    Swapfile Plugin available on hosting server:
      <?if ($plg_server == "0"):?>
        <?if ($plg_online_exist == "0"):?>
          <span class="green-text"><b> v<?=$plg_online_ver;?></b></span>
        <?else:?>
          <span class="orange-text"><b> No online plugin</b></span>
        <?endif;?>
      <?else:?>
          <span class="red-text"><b> OFFLINE</b></span>
      <?endif;?>
    <br></br>
    Swapfile Plugin local version:
      <?if ($plg_loc_ver != "no_local_plg"):?>
        <?if ($plg_loc_ver == $plg_online_ver):?>
          <span class="green-text"><b> v<?=$plg_loc_ver;?></b></span>
        <?else:?>
          <?if ($plg_online_exist == "0"):?>
            <span class="orange-text"><b> v<?=$plg_loc_ver;?></b></span>
          <?else:?>
            <span class="green-text"><b> v<?=$plg_loc_ver;?></b></span>
          <?endif;?>
        <?endif;?>
      <?else:?>
        <span class="red-text"><b> No local plugin</b></span>
      <?endif;?>

  </div>

  <div id="title">
    <span class="left">Actions</span>
  </div>

  <br></br>

  <div>
    <table>
      <tr style="font-weight:bold; color:#333333; background:#F0F0F0; text-shadow:0 1px 1px #FFFFFF;">
        <td colspan="3">Control Actions</td>
      </tr>
      <?if ($swapfile_running == "Yes"):?>
        <tr>
          <td width="30%">
            <form name="stop" method="POST" action="/update.htm" target="progressFrame">
              <input type="hidden" name="cmd" value="/etc/rc.d/rc.swapfile stop">
              <input type="submit" name="runCmd" value="Stop">
            </form>
          </td>
          <td>Stop swap file usage</td>
        </tr>
        <tr>
          <td width="30%">
            <form name="restart" method="POST" action="/update.htm" target="progressFrame">
              <input type="hidden" name="cmd" value="/etc/rc.d/rc.swapfile restart">
              <input type="submit" name="runCmd" value="Restart">
            </form>
          </td>
          <td>Restart swap file usage</td>
        </tr>
        <?$control_actions_exist = "true"?>
      <?else:?>
        <tr>
          <td width="30%">
            <form name="start" method="POST" action="/update.htm" target="progressFrame">
              <input type="hidden" name="cmd" value="/etc/rc.d/rc.swapfile start">
              <input type="submit" name="runCmd" value="Start">
            </form>
          </td>
          <td>Start swap file usage</td>
        </tr>
        <?$control_actions_exist = "true"?>
      <?endif;?>
      <?if ($control_actions_exist=="false"):?>
        <tr>
          <td colspan="3" align="center">No Control Actions available</td>
        </tr>
      <?endif;?>
    </table>
  </div>

  <br></br>

  <div style="border: 0px solid black;">
    <table>
      <tr style="font-weight:bold; color:#333333; background:#F0F0F0; text-shadow:0 1px 1px #FFFFFF;">
        <td colspan="2">Version Actions</td>
      </tr>
      <?if (($plg_online_exist=="0") && ($plg_online_ver!=$plg_loc_ver)):?>
        <tr>
          <td>ONLINE Plugin version different than LOCAL Plugin version</td>
          <td>
            <form name="updateplg" method="POST" action="/update.htm" target="progressFrame">
              <input type="hidden" name="cmd" value="/etc/rc.d/rc.swapfile updateplg">
              <input type="submit" name="runCmd" value="Update">
            </form>
          </td>
        </tr>
        <?$version_actions_exist="true"?>
      <?endif;?>
      <?if ($version_actions_exist=="false"):?>
        <tr>
          <td colspan="2" align="center">No Version Actions available</td>
        </tr>
      <?endif;?>
    </table>
  </div>

</div>
    
<div style="width: 49%; float:right; border: 0px solid black;">

  <div id="title">
    <span class="left">Configuration</span>
  </div>

  <div>
    <form name="swapfile_settings" method="POST" action="/update.htm" target="progressFrame" onsubmit="">
      <table>
        <tr>
          <td colspan="2" align="center">
            <input type="hidden" name="cmd" value="/etc/rc.d/rc.swapfile updatecfg">
            <input type="submit" name="runCmd" value="Save Below Configuration & Implement Immediately">
            <button type="button" onClick="done();">Return to unRAID Settings Page</button>
          </td>
        </tr>
        <tr style="font-weight:bold; color:#333333; background:#F0F0F0; text-shadow:0 1px 1px #FFFFFF;">
          <td colspan="2">Boot and Startup options</td>
        </tr>
        <tr>
          <td>Check & Update Plugin during array mount:</td>
          <td>
            <select name="arg1" id="arg1" size="1">
              <?=mk_option($swapfile_cfg['UPGRADE_PLG_ON_BOOT'], "true", "Yes");?>
              <?=mk_option($swapfile_cfg['UPGRADE_PLG_ON_BOOT'], "false", "No");?>
            </select>
          </td>
        </tr>
        <tr>
          <td>Start Swap file during array mount:</td>
          <td>
            <select name="arg2" id="arg2" size="1">
              <?=mk_option($swapfile_cfg['SWAP_ENABLE_ON_BOOT'], "true", "Yes");?>
              <?=mk_option($swapfile_cfg['SWAP_ENABLE_ON_BOOT'], "false", "No");?>
            </select>
          </td>
        </tr>
        <tr>
          <td>Delete Swap file upon Stop (will be recreated during Start):</td>
          <td>
            <select name="arg3" id="arg3" size="1">
              <?=mk_option($swapfile_cfg['SWAP_DELETE'], "true", "Yes");?>
              <?=mk_option($swapfile_cfg['SWAP_DELETE'], "false", "No");?>
            </select>
          </td>
        </tr>
        <tr style="font-weight:bold; color:#333333; background:#F0F0F0; text-shadow:0 1px 1px #FFFFFF;">
          <td colspan="2">Swapfile Settings (Any change will cause the swap file to be recreated if running)</td>
        </tr>
        <tr>
          <td>Swap file location (folder):</td>
          <td><input type="text" name="arg4" id="arg4" style="width: 17em;" maxlength="255" value="<?=$swapfile_cfg['SWAP_LOCATION'];?>"></td>
        </tr>
        <tr>
          <td>Swap file file name:</td>
          <td><input type="text" name="arg5" id="arg5" style="width: 17em;" maxlength="25" value="<?=$swapfile_cfg['SWAP_FILENAME'];?>"></td>
        </tr>
        <tr>
          <td>Swap file swap name:</td>
          <td><input type="text" name="arg6" id="arg6" style="width: 17em;" maxlength="25" value="<?=$swapfile_cfg['SWAP_NAME'];?>"></td>
        </tr>
        <tr>
          <td>Swap file size (example: for 2GB enter 2048):</td>
          <td><input type="text" name="arg7" id="arg7" style="width: 3em;" maxlength="10" value="<?=$swapfile_cfg['SWAP_SIZE_MB'];?>"> MB</td>
        </tr>
      </table>
    </form>
  </div>

</div>

</BODY>
</HTML>

]]>
</INLINE>
</FILE>

</PLUGIN>
