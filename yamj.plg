<?xml version='1.0' standalone='yes'?>
<PLUGIN>

############################################
# YAMJ Plugin by Dan Kessler
# Release Version v0.2
############################################

############################################
# cleanup file
############################################
<FILE Name="/tmp/yamj-cleanup" Run="/bin/bash">
<INLINE>
<![CDATA[
# Cleanup previous plugin installation
[ -f /etc/rc.d/rc.yamj ] && rm --force /etc/rc.d/rc.yamj
[ -d /usr/local/emhttp/plugins/yamj ] && rm --force --recursive /usr/local/emhttp/plugins/yamj
rm /tmp/yamj-cleanup
]]>
</INLINE>
</FILE>

############################################
# configuration file
############################################
# UPGRADE_PLG_ON_BOOT         - Check and Install new plugin version if exists on hosting server during array mount (true/false)
# YAMJ_DOWN_STABLE_ON_BOOT    - Download Latest YAMJ Stable version during during array mount (true/false)
# YAMJ_DOWN_SNAPSHOT_ON_BOOT  - Download Latest YAMJ Snapshot version during during array mount (true/false)
# YAMJ_ADD_CRON_ON_BOOT       - Add CRON job during array mount (true/false)
# YAMJ_CRON_MIN               - Cron minutes settings for YAMJ automation
# YAMJ_CRON_HOUR              - Cron hours settings for YAMJ automation
# YAMJ_CRON_DAY               - Cron days settings for YAMJ automation
# YAMJ_CRON_MONTH             - Cron months settings for YAMJ automation
# YAMJ_CRON_WEEKDAY           - Cron weekdays settings for YAMJ automation
# YAMJ_LOCATION               - Location (folder) of existing YAMJ installation
# YAMJ_DOWNLOAD_LOCATION      - Location (folder) for YAMJ download
# YAMJ_RUN_SCRIPT             - Full path for YAMJ run script
# YAMJ_RUN_SCRIPT_OUT         - Where to send the output of YAMJ run
############################################
<FILE Name="/boot/config/plugins/yamj/yamj.cfg">
<INLINE>
<![CDATA[
# YAMJ plugin configuration
UPGRADE_PLG_ON_BOOT="false"
YAMJ_DOWN_STABLE_ON_BOOT="false"
YAMJ_DOWN_SNAPSHOT_ON_BOOT="false"
YAMJ_ADD_CRON_ON_BOOT="false"
YAMJ_CRON_MIN=""
YAMJ_CRON_HOUR=""
YAMJ_CRON_DAY=""
YAMJ_CRON_MONTH=""
YAMJ_CRON_WEEKDAY=""
YAMJ_LOCATION="/boot/flash/YAMJ"
YAMJ_DOWNLOAD_LOCATION="/boot/flash/YAMJ_Downloads"
YAMJ_RUN_SCRIPT="/boot/flash/YAMJ/My_YAMJ_script.sh"
YAMJ_RUN_SCRIPT_OUT="/boot/flash/YAMJ/YAMJ_log.txt"

]]>
</INLINE>
</FILE>

############################################
# Get Icon file (must be after configuration file creation - needs plugin folder)
############################################
<FILE Name="/tmp/yamj-icon" Run="/bin/bash">
<INLINE>
<![CDATA[
# Get icon
wget --quiet --spider --no-check-certificate https://raw.github.com/theone11/YAMJ_plugin/master/yamj.png
if [ $? == "0" ] ; then
  wget --quiet --no-check-certificate -O /boot/config/plugins/yamj/yamj.png https://raw.github.com/theone11/YAMJ_plugin/master/yamj.png > /dev/null 2>&1
  logger -trc.yamj -plocal7.info -is "Icon downloaded from icon hosting server"
else
  logger -trc.yamj -plocal7.info -is "No icon to download from icon hosting server"
fi
if [ -f /boot/config/plugins/yamj/yamj.png ] ; then
  mkdir --parents /usr/local/emhttp/plugins/yamj
  cp --force /boot/config/plugins/yamj/yamj.png /usr/local/emhttp/plugins/yamj/yamj.png
  logger -trc.yamj -plocal7.info -is "Icon copied to emhttp plugin folder"
else
  logger -trc.yamj -plocal7.info -is "Icon does not exist locally - cannot copy to emhttp plugin folder"
fi
rm /tmp/yamj-icon
]]>
</INLINE>
</FILE>

############################################
# rc.yamj file
############################################
<FILE Name="/etc/rc.d/rc.yamj" Mode="0770">
<INLINE>
<![CDATA[
#!/bin/sh

#################
# W R I T E C F G
#################
write_cfg()
{
  echo "# YAMJ plugin configuration" > ${YAMJ_PLUGIN_PATH}/yamj.cfg

  echo "UPGRADE_PLG_ON_BOOT=\"$UPGRADE_PLG_ON_BOOT\"" >> ${YAMJ_PLUGIN_PATH}/yamj.cfg
  echo "YAMJ_DOWN_STABLE_ON_BOOT=\"$YAMJ_DOWN_STABLE_ON_BOOT\"" >> ${YAMJ_PLUGIN_PATH}/yamj.cfg
  echo "YAMJ_DOWN_SNAPSHOT_ON_BOOT=\"$YAMJ_DOWN_SNAPSHOT_ON_BOOT\"" >> ${YAMJ_PLUGIN_PATH}/yamj.cfg
  echo "YAMJ_ADD_CRON_ON_BOOT=\"$YAMJ_ADD_CRON_ON_BOOT\"" >> ${YAMJ_PLUGIN_PATH}/yamj.cfg
  echo "YAMJ_CRON_MIN=\"$YAMJ_CRON_MIN\"" >> ${YAMJ_PLUGIN_PATH}/yamj.cfg
  echo "YAMJ_CRON_HOUR=\"$YAMJ_CRON_HOUR\"" >> ${YAMJ_PLUGIN_PATH}/yamj.cfg
  echo "YAMJ_CRON_DAY=\"$YAMJ_CRON_DAY\"" >> ${YAMJ_PLUGIN_PATH}/yamj.cfg
  echo "YAMJ_CRON_MONTH=\"$YAMJ_CRON_MONTH\"" >> ${YAMJ_PLUGIN_PATH}/yamj.cfg
  echo "YAMJ_CRON_WEEKDAY=\"$YAMJ_CRON_WEEKDAY\"" >> ${YAMJ_PLUGIN_PATH}/yamj.cfg
  echo "YAMJ_LOCATION=\"$YAMJ_LOCATION\"" >> ${YAMJ_PLUGIN_PATH}/yamj.cfg
  echo "YAMJ_DOWNLOAD_LOCATION=\"$YAMJ_DOWNLOAD_LOCATION\"" >> ${YAMJ_PLUGIN_PATH}/yamj.cfg
  echo "YAMJ_RUN_SCRIPT=\"$YAMJ_RUN_SCRIPT\"" >> ${YAMJ_PLUGIN_PATH}/yamj.cfg
  echo "YAMJ_RUN_SCRIPT_OUT=\"$YAMJ_RUN_SCRIPT_OUT\"" >> ${YAMJ_PLUGIN_PATH}/yamj.cfg

  logger -trc.yamj -plocal7.info -is "Plugin configuration written"
}

#################
# W R I T E S T A T U S
#################
write_status()
{
  echo "# YAMJ status" > $STATUS_FILE

  echo "YAMJ_PLG_HOSTING_SERVER_EXISTS=\"$YAMJ_PLG_HOSTING_SERVER_EXISTS\"" >> $STATUS_FILE
  echo "YAMJ_PLG_ONLINE_EXIST=\"$YAMJ_PLG_ONLINE_EXIST\"" >> $STATUS_FILE
  echo "YAMJ_PLG_ONLINE_VER=\"$YAMJ_PLG_ONLINE_VER\"" >> $STATUS_FILE
  echo "YAMJ_PLG_LOCAL_VER=\"$YAMJ_PLG_LOCAL_VER\"" >> $STATUS_FILE
  echo "YAMJ_SNP_HOSTING_SERVER_EXISTS=\"$YAMJ_SNP_HOSTING_SERVER_EXISTS\"" >> $STATUS_FILE
  echo "YAMJ_SNP_ONLINE_EXIST=\"$YAMJ_SNP_ONLINE_EXIST\"" >> $STATUS_FILE
  echo "YAMJ_SNP_ONLINE_VER=\"$YAMJ_SNP_ONLINE_VER\"" >> $STATUS_FILE
  echo "YAMJ_SNP_ONLINE_REV=\"$YAMJ_SNP_ONLINE_REV\"" >> $STATUS_FILE
  echo "YAMJ_FNL_HOSTING_SERVER_EXISTS=\"$YAMJ_FNL_HOSTING_SERVER_EXISTS\"" >> $STATUS_FILE
  echo "YAMJ_FNL_ONLINE_EXIST=\"$YAMJ_FNL_ONLINE_EXIST\"" >> $STATUS_FILE
  echo "YAMJ_FNL_ONLINE_VER=\"$YAMJ_FNL_ONLINE_VER\"" >> $STATUS_FILE
  echo "YAMJ_FNL_ONLINE_REV=\"$YAMJ_FNL_ONLINE_REV\"" >> $STATUS_FILE
  echo "YAMJ_LOCAL_VER=\"$YAMJ_LOCAL_VER\"" >> $STATUS_FILE
  echo "YAMJ_LOCAL_REV=\"$YAMJ_LOCAL_REV\"" >> $STATUS_FILE
  echo "YAMJ_SNP_DOWN_VER=\"$YAMJ_SNP_DOWN_VER\"" >> $STATUS_FILE
  echo "YAMJ_SNP_DOWN_REV=\"$YAMJ_SNP_DOWN_REV\"" >> $STATUS_FILE
  echo "YAMJ_FNL_DOWN_VER=\"$YAMJ_FNL_DOWN_VER\"" >> $STATUS_FILE
}

#################
# C R O N A D D
#################
#yamj_cron_add()
#{

#}

####################
# G E T O N L I N E V E R S I O N S
####################
yamj_getonlineversions()
{
  # YAMJ Snapshot hosting server by lainie
  YAMJ_SNP_HOSTING_SERVER="mediaplayersite.com/YAMJ_Latest"
  # Get online/offline status of YAMJ Snapshot hosting server
  wget --quiet --spider $YAMJ_SNP_HOSTING_SERVER
  YAMJ_SNP_HOSTING_SERVER_EXISTS=$?
  # Check if YAMJ Snapshot hosting server is online
  if [ "$YAMJ_SNP_HOSTING_SERVER_EXISTS" == "0" ] ; then
    # Get latest version number from server
    YAMJ_SNP_ONLINE_VER=$(wget ${YAMJ_SNP_HOSTING_SERVER} -q -O - | grep -m 1 "Current version: " | awk 'gsub(/.*Current version: |\/.*/,"")')
    YAMJ_SNP_ONLINE_VER=$(echo "${YAMJ_SNP_ONLINE_VER%?}")
    YAMJ_SNP_ONLINE_REV=$(wget ${YAMJ_SNP_HOSTING_SERVER} -q -O - | grep -m 1 "Latest revision: r" | awk 'gsub(/.*Latest revision: r|\/.*/,"")')
    YAMJ_SNP_ONLINE_REV=$(echo "${YAMJ_SNP_ONLINE_REV%?}")
  else
    # Set version to server_down - does not exist
    YAMJ_SNP_ONLINE_VER="server_down"
    YAMJ_SNP_ONLINE_REV="server_down"
  fi
  # YAMJ Snapshot filename
  YAMJ_SNP_ONLINE_FILENAME="yamj-${YAMJ_SNP_ONLINE_VER}-r${YAMJ_SNP_ONLINE_REV}-bin.zip"
  # YAMJ Snapshot hosting server URL
  YAMJ_SNP_URL="http://mediaplayersite.com/sites/default/files/YAMJ"
  # Check if YAMJ Snapshot file exists online
  wget --quiet --spider ${YAMJ_SNP_URL}/${YAMJ_SNP_ONLINE_FILENAME}
  YAMJ_SNP_ONLINE_EXIST=$?

  # YAMJ Stable hosting server
  YAMJ_FNL_HOSTING_SERVER="http://code.google.com/p/moviejukebox/downloads/list"
  # Get online/offline status of YAMJ Stable hosting server
  wget --quiet --spider $YAMJ_FNL_HOSTING_SERVER
  YAMJ_FNL_HOSTING_SERVER_EXISTS=$?
  # Check if YAMJ Stable hosting server is online
  if [ "$YAMJ_FNL_HOSTING_SERVER_EXISTS" == "0" ] ; then
    # Get latest version number from server
    YAMJ_FNL_ONLINE_VER=$(wget ${YAMJ_FNL_HOSTING_SERVER} -q -O - | grep -m 1 "Moviejukebox v" | awk 'gsub(/.*Moviejukebox v|\n.*/,"")' | tr -d '\n' | tr -d '\r')
    YAMJ_FNL_ONLINE_REV=$(wget ${YAMJ_FNL_HOSTING_SERVER} -q -O - | grep -m 1 "Featured, OpSys-All, Type-Archive, r" | awk 'gsub(/.* r|].*/,"")')
    YAMJ_FNL_ONLINE_REV=$(echo "${YAMJ_FNL_ONLINE_REV%?}")
  else
    # Set version to server_down - does not exist
    YAMJ_FNL_ONLINE_VER="server_down"
    YAMJ_FNL_ONLINE_REV="server_down"
  fi
  # YAMJ Stable filename
  YAMJ_FNL_ONLINE_FILENAME="moviejukebox-${YAMJ_FNL_ONLINE_VER}.zip"
  # YAMJ Stable hosting server URL
  YAMJ_FNL_URL="http://moviejukebox.googlecode.com/files"
  # Check if YAMJ Stable file exists online - NOT SUPPORTED BY GOOGLE-CODE yet
#  wget --quiet --spider ${YAMJ_FNL_URL}/${YAMJ_FNL_ONLINE_FILENAME}
#  YAMJ_FNL_ONLINE_EXIST=$?
  YAMJ_FNL_ONLINE_EXIST=0

  # Write status to update WEBUI
  write_status
}

###################
# G E T L O C A L V E R S I O N S
###################
yamj_getlocalversions()
{
  if [ -d $YAMJ_LOCATION ] ; then
    if [ -f ${YAMJ_LOCATION}/version.txt ] ; then
      # Get Existing local YAMJ version
      YAMJ_LOCAL_VER=$(cat ${YAMJ_LOCATION}/version.txt | grep "Version: " | awk 'gsub(/.*Version: |\n.*/,"")')
      YAMJ_LOCAL_REV=$(cat ${YAMJ_LOCATION}/version.txt | grep "Revision: r" | awk 'gsub(/.*Revision: r|\n.*/,"")')
    else
      YAMJ_LOCAL_VER="no_ver_file"
      YAMJ_LOCAL_REV="no_ver_file"
    fi
  else
    # Set non existing local YAMJ version
    YAMJ_LOCAL_VER="no_local_ver"
    YAMJ_LOCAL_REV="no_local_ver"
  fi

  if [ -d $YAMJ_DOWNLOAD_LOCATION ] ; then
    YAMJ_SNP_FILES=$(ls -1Art ${YAMJ_DOWNLOAD_LOCATION}/yamj-*-r*-bin.zip 2>/dev/null)
    ls -1Art /mnt/cache/unRAID_Apps/YAMJ/YAMJ_Downloads/yamj-*-r*-bin.zip 2>/dev/null
    if [ "$YAMJ_SNP_FILES" != "" ] ; then
      # Get existing downloaded YAMJ version
      YAMJ_SNP_DOWN_VER=$(echo $YAMJ_SNP_FILES | tail -n1 | awk 'gsub(/.*yamj-|-r.*/,"")')
      YAMJ_SNP_DOWN_REV=$(echo $YAMJ_SNP_FILES | tail -n1 | awk 'gsub(/.*-r|-bin.*/,"")')
    else
      YAMJ_SNP_DOWN_VER="no_snp_down"
      YAMJ_SNP_DOWN_REV="no_snp_down"
    fi
    YAMJ_FNL_FILES=$(ls -1Art ${YAMJ_DOWNLOAD_LOCATION}/moviejukebox-*.zip 2>/dev/null)
    if [ "$YAMJ_FNL_FILES" != "" ] ; then
      YAMJ_FNL_DOWN_VER=$(echo $YAMJ_FNL_FILES | tail -n1 | awk 'gsub(/.*moviejukebox-|.zip.*/,"")')
    else
      YAMJ_FNL_DOWN_VER="no_fnl_down"
    fi
  else
    # Set non existing downloaded YAMJ version
    YAMJ_SNP_DOWN_VER="no_down_loc"
    YAMJ_SNP_DOWN_VER="no_down_loc"
    YAMJ_FNL_DOWN_VER="no_down_loc"
  fi

  # Write status to update WEBUI
  write_status
}

###################
# D O W N L O A D F N L
###################
yamj_download_fnl()
{
  # Check online status
  yamj_getonlineversions

  # Check if YAMJ Stable hosting servers are online
  if [ "$YAMJ_FNL_HOSTING_SERVER_EXISTS" == "0" ] ; then
    # Check if latest version is available on server
    if [ "$YAMJ_FNL_ONLINE_EXIST" == "0" ] ; then
      if [ ! -d $YAMJ_DOWNLOAD_LOCATION ] ; then
        logger -trc.yamj -plocal7.info -is "No YAMJ doaload folder exists - Creating folder..."
        mkdir --parents $YAMJ_DOWNLOAD_LOCATION
      fi
      if [ ! -f ${YAMJ_DOWNLOAD_LOCATION}/${YAMJ_FNL_ONLINE_FILENAME} ] ; then
        logger -trc.yamj -plocal7.info -is "Latest YAMJ Stable (v${YAMJ_FNL_ONLINE_VER}) does not exist in download location - Removing all existing downloaded Stable versions and downloading..."
        rm ${YAMJ_DOWNLOAD_LOCATION}/moviejukebox-*.zip >/dev/null 2>&1
        wget -nv -O ${YAMJ_DOWNLOAD_LOCATION}/${YAMJ_FNL_ONLINE_FILENAME} ${YAMJ_FNL_URL}/${YAMJ_FNL_ONLINE_FILENAME} >/dev/null 2>&1
      else
        logger -trc.yamj -plocal7.info -is "Latest YAMJ Stable (v${YAMJ_FNL_ONLINE_VER}) exists locally in download location - No need to download"
      fi
    else
      logger -trc.yamj -plocal7.info -is "Latest YAMJ Stable version does not exist online - Cannot download new version"
    fi
  else
    logger -trc.yamj -plocal7.info -is "Latest YAMJ Stable hosting server is OFFLINE - Cannot check for new version"
  fi
}

###################
# D O W N L O A D S N P
###################
yamj_download_snp()
{
  # Check online status
  yamj_getonlineversions

  # Check if YAMJ Snapshot hosting servers are online
  if [ "$YAMJ_SNP_HOSTING_SERVER_EXISTS" == "0" ] ; then
    # Check if latest version is available on server
    if [ "$YAMJ_SNP_ONLINE_EXIST" == "0" ] ; then
      if [ ! -d $YAMJ_DOWNLOAD_LOCATION ] ; then
        logger -trc.yamj -plocal7.info -is "No YAMJ doaload folder exists - Creating folder..."
        mkdir --parents $YAMJ_DOWNLOAD_LOCATION
      fi
      if [ ! -f ${YAMJ_DOWNLOAD_LOCATION}/${YAMJ_SNP_ONLINE_FILENAME} ] ; then
        logger -trc.yamj -plocal7.info -is "Latest YAMJ Snapshot (v${YAMJ_SNP_ONLINE_VER} r${YAMJ_SNP_ONLINE_REV}) does not exist in download location - Removing all existing downloaded Snapshot versions and downloading..."
        rm ${YAMJ_DOWNLOAD_LOCATION}/yamj-*-bin.zip >/dev/null 2>&1
        wget -nv -O ${YAMJ_DOWNLOAD_LOCATION}/${YAMJ_SNP_ONLINE_FILENAME} ${YAMJ_SNP_URL}/${YAMJ_SNP_ONLINE_FILENAME} >/dev/null 2>&1
      else
        logger -trc.yamj -plocal7.info -is "Latest YAMJ Snapshot (v${YAMJ_SNP_ONLINE_VER} r${YAMJ_SNP_ONLINE_REV}) exists locally in downlaod location - No need to download"
      fi
    else
      logger -trc.yamj -plocal7.info -is "Latest YAMJ Snapshot version does not exist online - Cannot download new version"
    fi
  else
    logger -trc.yamj -plocal7.info -is "Latest YAMJ Snapshot hosting server is OFFLINE - Cannot check for new version"
  fi
}

#################
# G E T P L G V E R S I O N S
#################
yamj_getplgversions()
{
  # Plugin hosting server
  YAMJ_PLG_HOSTING_SERVER="https://github.com/theone11/YAMJ_plugin"
  # Plugin hosting server URL + filename
  YAMJ_PLG_URL="https://raw.github.com/theone11/YAMJ_plugin/master/yamj.plg"
  # Get online/offline status of plugin hosting server
  wget --quiet --spider --no-check-certificate $YAMJ_PLG_HOSTING_SERVER
  YAMJ_PLG_HOSTING_SERVER_EXISTS=$?
  # Check if plugin hosting server is online
  if [ "$YAMJ_PLG_HOSTING_SERVER_EXISTS" == "0" ] ; then
    # Check if plugin file exists online
    wget --quiet --spider --no-check-certificate $YAMJ_PLG_URL
    YAMJ_PLG_ONLINE_EXIST=$?
    if [ "$YAMJ_PLG_ONLINE_EXIST" == "0" ] ; then
      # Get latest version number from server
      YAMJ_PLG_ONLINE_VER=$(wget --no-check-certificate --quiet $YAMJ_PLG_URL -O - | grep -m 1 "Release Version v" | awk 'gsub(/.*Release Version v|*/,"")')
    else
      YAMJ_PLG_ONLINE_VER="no_online_plg"
    fi
  else
    # Set version to server_down - does not exist
    YAMJ_PLG_ONLINE_VER="server_down"
  fi

  # Check if local plugin file exists
  if [ -f /boot/config/plugins/yamj.plg ] ; then
    # Get existing version number from local file
    YAMJ_PLG_LOCAL_VER=$(grep -m 1 "Release Version v" /boot/config/plugins/yamj.plg | awk 'gsub(/.*Release Version v|*/,"")')
  else
    # Set version to no_local_plg - does not exist
    YAMJ_PLG_LOCAL_VER="no_local_plg"
  fi

  # Write status to update WEBUI
  write_status
}

#######################
# U P D A T E P L G
#######################
yamj_updateplg()
{
  # Get online and local plugin versions
  yamj_getplgversions

  # Check if Plugin hosting server is online
  if [ "$YAMJ_PLG_HOSTING_SERVER_EXISTS" == "0" ] ; then
    # Check if latest version is available on server
    if [ "$YAMJ_PLG_ONLINE_EXIST" == "0" ] ; then
      # Check if online and local versions are different
      if [ "$YAMJ_PLG_ONLINE_VER" != "$YAMJ_PLG_LOCAL_VER" ] ; then
        # Check if local plugin doesn't exist
        if [ "$YAMJ_PLG_LOCAL_VER" == "no_local_plg" ] ; then
          logger -trc.yamj -plocal7.info -is "Local plugin does not exist. Installing latest plugin version from hosting server (v$YAMJ_PLG_ONLINE_VER)"
        else
          logger -trc.yamj -plocal7.info -is "Upgrading local plugin (v$YAMJ_PLG_LOCAL_VER) to hosting server plugin (v$YAMJ_PLG_ONLINE_VER)"
        fi
        # Download new plugin version
        wget --no-check-certificate --quiet $YAMJ_PLG_URL -O /boot/config/plugins/yamj.plg
        # Install new plugin
        /usr/local/sbin/installplg /boot/config/plugins/yamj.plg
        logger -trc.yamj -plocal7.info -is "New/Updated plugin installation complete"
      # Plugin hosting server is offline
      else
        logger -trc.yamj -plocal7.info -is "Local plugin is the same version as on hosting server (v$YAMJ_PLG_LOCAL_VER)"
      fi
    # Online version and local version are the same
    else
      logger -trc.yamj -plocal7.info -is "Plugin does not exist on plugin hosting server - Cannot download new plugin"
    fi
  else
    logger -trc.yamj -plocal7.info -is "YAMJ Plugin hosting servers is OFFLINE - Cannot check for new packages versions"
  fi
}

###################
# R U N S C R I P T
###################
yamj_runscript()
{
  # Check if YAMJ exists
  if [ -d $YAMJ_LOCATION ] ; then
    if [ -f $YAMJ_RUN_SCRIPT ] ; then
      logger -trc.yamj -plocal7.info -is "Running YAMJ script in background ..."
      nohup $YAMJ_RUN_SCRIPT > $YAMJ_RUN_SCRIPT_OUT 2>&1 &
    else
      logger -trc.yamj -plocal7.info -is "YAMJ script ($YAMJ_RUN_SCRIPT) does not exist - Nothing to run"
    fi
  else
    logger -trc.yamj -plocal7.info -is "YAMJ installation ($YAMJ_LOCATION) does not exist - Cannot run script"
  fi
}

###################
# B O O T
###################
yamj_boot()
{
  # Check if new plugin should be updated during array mount
  if [ $UPGRADE_PLG_ON_BOOT == "true" ] ; then
    logger -trc.yamj -plocal7.info -is "Checking for YAMJ plugin update during array mount ..."
    yamj_updateplg
  # Plugin update should not be done during boot
  else
    logger -trc.yamj -plocal7.info -is "YAMJ plugin update during array mount is disabled"
  fi

  # Check if YAMJ CRON job should be added during array mount
  if [ $YAMJ_ADD_CRON_ON_BOOT == "true" ] ; then
    logger -trc.yamj -plocal7.info -is "Adding Scheduled YAMJ Scan during array mount ..."
    yamj_addcron
  else
    logger -trc.yamj -plocal7.info -is "Adding Scheduled YAMJ Scan during array mount is disabled"
  fi

  # Check if YAMJ Stable verison should be downloaded during array mount
  if [ $YAMJ_DOWN_STABLE_ON_BOOT == "true" ] ; then
    logger -trc.yamj -plocal7.info -is "Downloading Latest YAMJ Stable version during array mount ..."
    yamj_donload_fnl
  else
    logger -trc.yamj -plocal7.info -is "Downloading Latest YAMJ Stable version during array mount is disabled"
  fi

  # Check if YAMJ Snapshot verison should be downloaded during array mount
  if [ $YAMJ_DOWN_SNAPSHOT_ON_BOOT == "true" ] ; then
    logger -trc.yamj -plocal7.info -is "Downloading Latest YAMJ Snapshot version during array mount ..."
    yamj_download_snp
  else
    logger -trc.yamj -plocal7.info -is "Downloading Latest YAMJ Snapshot version during array mount is disabled"
  fi

}

###################
# R E M O V E C R O N
###################
yamj_removecron()
{
  # Delete YAMJ CRON job
  crontab -l | grep -v "# Scheduled YAMJ Scan" | grep -v $YAMJ_RUN_SCRIPT > /tmp/yamj_crontab
  crontab /tmp/yamj_crontab
  rm --force /tmp/yamj_crontab
  logger -trc.yamj -plocal7.info -is "Deleted Scheduled YAMJ Scan from crontab if existed"
}

###################
# A D D C R O N
###################
yamj_addcron()
{
  # Add YAMJ CRON job
  crontab -l > /tmp/yamj_crontab
  echo "# Scheduled YAMJ Scan" >> /tmp/yamj_crontab
  echo "${YAMJ_CRON_MIN} ${YAMJ_CRON_HOUR} ${YAMJ_CRON_DAY} ${YAMJ_CRON_MONTH} ${YAMJ_CRON_WEEKDAY} ${YAMJ_RUN_SCRIPT} > ${YAMJ_RUN_SCRIPT_OUT} 2>&1" >> /tmp/yamj_crontab
  crontab /tmp/yamj_crontab
  rm --force /tmp/yamj_crontab
  logger -trc.yamj -plocal7.info -is "Added Scheduled YAMJ Scan to crontab"
}

###################
# U P D A T E C F G
###################
yamj_updatecfg()
{
  # YAMJ arguments file used for WEBUI configuration update
  ARGUMENTS_FILE="/usr/local/emhttp/plugins/yamj/yamj.args"

  [ -f $ARGUMENTS_FILE ] && source $ARGUMENTS_FILE

  UPGRADE_PLG_ON_BOOT=$UPGRADE_PLG_ON_BOOT_NEW
  YAMJ_DOWN_STABLE_ON_BOOT=$YAMJ_DOWN_STABLE_ON_BOOT_NEW
  YAMJ_DOWN_SNAPSHOT_ON_BOOT=$YAMJ_DOWN_SNAPSHOT_ON_BOOT
  YAMJ_ADD_CRON_ON_BOOT=$YAMJ_ADD_CRON_ON_BOOT_NEW
  YAMJ_LOCATION=$YAMJ_LOCATION_NEW
  
  # Check if new CRON settings are all empty
  if [ "$YAMJ_CRON_MIN_NEW" == "" ] && [ "$YAMJ_CRON_HOUR_NEW" == "" ] && [ "$YAMJ_CRON_DAY_NEW" == "" ] && \
     [ "$YAMJ_CRON_MONTH_NEW" == "" ] && [ "$YAMJ_CRON_WEEKDAY_NEW" == "" ] ; then
    # Delete YAMJ CRON job
    yamj_removecron
    # Save new settings
    YAMJ_CRON_MIN=$YAMJ_CRON_MIN_NEW
    YAMJ_CRON_HOUR=$YAMJ_CRON_HOUR_NEW
    YAMJ_CRON_DAY=$YAMJ_CRON_DAY_NEW
    YAMJ_CRON_MONTH=$YAMJ_CRON_MONTH_NEW
    YAMJ_CRON_WEEKDAY=$YAMJ_CRON_WEEKDAY_NEW
    YAMJ_RUN_SCRIPT=$YAMJ_RUN_SCRIPT_NEW
    YAMJ_RUN_SCRIPT_OUT=$YAMJ_RUN_SCRIPT_OUT_NEW
  else
    # Check if any CRON settings is empty
    if [ "$YAMJ_CRON_MIN_NEW" == "" ] || [ "$YAMJ_CRON_HOUR_NEW" == "" ] || [ "$YAMJ_CRON_DAY_NEW" == "" ] || \
       [ "$YAMJ_CRON_MONTH_NEW" == "" ] || [ "$YAMJ_CRON_WEEKDAY_NEW" == "" ] || [ "$YAMJ_RUN_SCRIPT_NEW" == "" ] || \
       [ "$YAMJ_RUN_SCRIPT_OUT_NEW" == "" ] ; then
      logger -trc.yamj -plocal7.info -is "At least one Scheduled YAMJ Scan setting is missing - New schedule related settings not saved"
    else
      # Check if any off the new CRON settings are different than the existing settings
      if [ "$YAMJ_CRON_MIN_NEW" != "$YAMJ_CRON_MIN" ] || [ "$YAMJ_CRON_HOUR_NEW" != "$YAMJ_CRON_HOUR" ] || \
         [ "$YAMJ_CRON_DAY_NEW" != "$YAMJ_CRON_DAY" ] || [ "$YAMJ_CRON_MONTH_NEW" != "$YAMJ_CRON_MONTH" ] || \
         [ "$YAMJ_CRON_WEEKDAY_NEW" != "$YAMJ_CRON_WEEKDAY" ] || [ "$YAMJ_RUN_SCRIPT_NEW" != "$YAMJ_RUN_SCRIPT" ] || \
         [ "$YAMJ_RUN_SCRIPT_OUT_NEW" != "$YAMJ_RUN_SCRIPT_OUT" ] ; then
        # Delete YAMJ CRON job
        yamj_removecron
        # Save new settings
        YAMJ_CRON_MIN=$YAMJ_CRON_MIN_NEW
        YAMJ_CRON_HOUR=$YAMJ_CRON_HOUR_NEW
        YAMJ_CRON_DAY=$YAMJ_CRON_DAY_NEW
        YAMJ_CRON_MONTH=$YAMJ_CRON_MONTH_NEW
        YAMJ_CRON_WEEKDAY=$YAMJ_CRON_WEEKDAY_NEW
        YAMJ_RUN_SCRIPT=$YAMJ_RUN_SCRIPT_NEW
        YAMJ_RUN_SCRIPT_OUT=$YAMJ_RUN_SCRIPT_OUT_NEW
        # Add new YAMJ CRON job
        yamj_addcron
      else
        # Save new settings
        YAMJ_CRON_MIN=$YAMJ_CRON_MIN_NEW
        YAMJ_CRON_HOUR=$YAMJ_CRON_HOUR_NEW
        YAMJ_CRON_DAY=$YAMJ_CRON_DAY_NEW
        YAMJ_CRON_MONTH=$YAMJ_CRON_MONTH_NEW
        YAMJ_CRON_WEEKDAY=$YAMJ_CRON_WEEKDAY_NEW
        YAMJ_RUN_SCRIPT=$YAMJ_RUN_SCRIPT_NEW
        YAMJ_RUN_SCRIPT_OUT=$YAMJ_RUN_SCRIPT_OUT_NEW
      fi
    fi
  fi

  # Check if download location changed
  if [ "$YAMJ_DOWNLOAD_LOCATION_NEW" != "$YAMJ_DOWNLOAD_LOCATION" ] ; then
    # Check if new download location exists
    if [ ! -d $YAMJ_DOWNLOAD_LOCATION_NEW ] ; then
      # Create new download location
      mkdir --parents $YAMJ_DOWNLOAD_LOCATION_NEW
      logger -trc.yamj -plocal7.info -is "New download location created"
    fi
    # Check if download location exists
    if [ -d $YAMJ_DOWNLOAD_LOCATION ] ; then
      # Move any existing files to new download location
      cp --force --recursive ${YAMJ_DOWNLOAD_LOCATION}/* ${YAMJ_DOWNLOAD_LOCATION_NEW}
      rm --force --recursive ${YAMJ_DOWNLOAD_LOCATION}
      logger -trc.yamj -plocal7.info -is "Moved existing files from ${YAMJ_DOWNLOAD_LOCATION} (removed folder) to ${YAMJ_DOWNLOAD_LOCATION_NEW}"
    else
      logger -trc.yamj -plocal7.info -is "No download location currently exists - Nothing to do"
    fi
  fi
  YAMJ_DOWNLOAD_LOCATION=$YAMJ_DOWNLOAD_LOCATION_NEW

  echo $UPGRADE_PLG_ON_BOOT_NEW,$YAMJ_DOWN_STABLE_ON_BOOT_NEW,$YAMJ_DOWN_SNAPSHOT_ON_BOOT_NEW,$YAMJ_ADD_CRON_ON_BOOT_NEW,$YAMJ_CRON_MIN_NEW,$YAMJ_CRON_HOUR_NEW,$YAMJ_CRON_DAY_NEW,$YAMJ_CRON_MONTH_NEW,$YAMJ_CRON_WEEKDAY_NEW,$YAMJ_LOCATION_NEW,$YAMJ_DOWNLOAD_LOCATION_NEW,$YAMJ_RUN_SCRIPT_NEW,$YAMJ_RUN_SCRIPT_OUT_NEW
  echo $UPGRADE_PLG_ON_BOOT,$YAMJ_DOWN_STABLE_ON_BOOT,$YAMJ_DOWN_SNAPSHOT_ON_BOOT,$YAMJ_ADD_CRON_ON_BOOT,$YAMJ_CRON_MIN,$YAMJ_CRON_HOUR,$YAMJ_CRON_DAY,$YAMJ_CRON_MONTH,$YAMJ_CRON_WEEKDAY,$YAMJ_LOCATION,$YAMJ_DOWNLOAD_LOCATION,$YAMJ_RUN_SCRIPT,$YAMJ_RUN_SCRIPT_OUT
  write_cfg
}

###################
# M A I N
###################

# YAMJ plugin folder on boot flash drive
YAMJ_PLUGIN_PATH="/boot/config/plugins/yamj"

# YAMJ status file used for WEBUI updates
STATUS_FILE="/usr/local/emhttp/plugins/yamj/yamj.status"

[ -f ${YAMJ_PLUGIN_PATH}/yamj.cfg ] && source ${YAMJ_PLUGIN_PATH}/yamj.cfg
[ -f $STATUS_FILE ] && source $STATUS_FILE

case "$1" in
  'updatecfg')
    yamj_updatecfg
  ;;
  'writecfg')
    write_cfg
  ;;
  'getonlineversions')
    yamj_getonlineversions
  ;;
  'getlocalversions')
    yamj_getlocalversions
  ;;
  'getplgversions')
    yamj_getplgversions
  ;;
  'downloadfnl')
    yamj_download_fnl
  ;;
  'downloadsnp')
    yamj_download_snp
  ;;
  'updateplg')
    yamj_updateplg
  ;;
  'boot')
    yamj_boot
  ;;
  'writestatus')
    write_status
  ;;
  'runscript')
    yamj_runscript
  ;;

  *)
    echo "usage $0 cron_add | updatecfg | writecfg | updateplg | getplgversions"
esac
]]>
</INLINE>
</FILE>

############################################
# Event handlers
############################################
<FILE Name="/usr/local/emhttp/plugins/yamj/event/disks_mounted" Mode="0770">
<INLINE>
<![CDATA[
#!/bin/bash
/etc/rc.d/rc.yamj boot
]]>
</INLINE>
</FILE>

<FILE Name="/usr/local/emhttp/plugins/yamj/event/unmounting_disks" Mode="0770">
<INLINE>
<![CDATA[
#!/bin/bash

]]>
</INLINE>
</FILE>

############################################
# Files required to hook the plugin into the unRaid webGui menu system
############################################

############################################
# The page file defines which menu page the plugin will appear on
############################################
<FILE Name="/usr/local/emhttp/plugins/yamj/yamj.page">
<INLINE>
<![CDATA[
Menu="NetworkServices"
Icon="yamj.png"
Version=""
Author="Dan Kessler"
Type="php"
Title="YAMJ"
]]>
</INLINE>
</FILE>

############################################
# WEBUI page
############################################
<FILE Name="/usr/local/emhttp/plugins/yamj/yamj.php">
<INLINE>
<![CDATA[

<?PHP
shell_exec("/etc/rc.d/rc.yamj getplgversions");
shell_exec("/etc/rc.d/rc.yamj getonlineversions");
shell_exec("/etc/rc.d/rc.yamj getlocalversions");

$yamj_cfg = parse_ini_file("/boot/config/plugins/yamj/yamj.cfg");
$yamj_status = parse_ini_file("/usr/local/emhttp/plugins/yamj/yamj.status");

$yamj_location = $yamj_cfg['YAMJ_LOCATION'];

$plg_server = $yamj_status['YAMJ_PLG_HOSTING_SERVER_EXISTS'];
$plg_online_exist = $yamj_status['YAMJ_PLG_ONLINE_EXIST'];
$plg_online_ver = $yamj_status['YAMJ_PLG_ONLINE_VER'];
$plg_loc_ver = $yamj_status['YAMJ_PLG_LOCAL_VER'];

$snp_server = $yamj_status['YAMJ_SNP_HOSTING_SERVER_EXISTS'];
$snp_online_exist = $yamj_status['YAMJ_SNP_ONLINE_EXIST'];
$snp_online_ver = $yamj_status['YAMJ_SNP_ONLINE_VER'];
$snp_online_rev = $yamj_status['YAMJ_SNP_ONLINE_REV'];

$fnl_server = $yamj_status['YAMJ_FNL_HOSTING_SERVER_EXISTS'];
$fnl_online_exist = $yamj_status['YAMJ_FNL_ONLINE_EXIST'];
$fnl_online_ver = $yamj_status['YAMJ_FNL_ONLINE_VER'];
$fnl_online_rev = $yamj_status['YAMJ_FNL_ONLINE_REV'];

$loc_ver = $yamj_status['YAMJ_LOCAL_VER'];
$loc_rev = $yamj_status['YAMJ_LOCAL_REV'];

$snp_down_ver = $yamj_status['YAMJ_SNP_DOWN_VER'];
$snp_down_rev = $yamj_status['YAMJ_SNP_DOWN_REV'];
$fnl_down_ver = $yamj_status['YAMJ_FNL_DOWN_VER'];

$cron = shell_exec("crontab -l | grep \"".$yamj_cfg['YAMJ_RUN_SCRIPT']."\"");

$control_actions_exist = "false";
$version_actions_exist = "false";
?>

<HTML>
<HEAD></HEAD>
<BODY>

<div style="width: 49%; float:left; border: 0px solid black;">
  <div id="title">
    <span class="left">Status</span>
  </div>

  <div style="border: 0px solid black;">
    <span class="left">
      <p>Local YAMJ <?=$yamj_location;?>:
        <?if ($loc_ver=="no_local_ver"):?>
          <span class="red-text"><b> YAMJ folder does not exist</b></span>
        <?else:?>
          <?if ($loc_ver=="no_ver_file"):?>
            <span class="red-text"><b> YAMJ version file does not exist in YAMJ folder</b></span>
          <?else:?>
            <span class="green-text"><b> v<?=$loc_ver;?> r<?=$loc_rev;?></b></span>
          <?endif;?>
        <?endif;?>
      </p>
      <p>Currently defined Scheduled YAMJ Scan in <i>crontab</i>:
        <?if ($cron==""):?>
          <span class="orange-text"><b> No Scheduled YAMJ Scan defined</b></span></p>
        <?else:?>
          </p><p><span class="green-text"><b><?=$cron;?></span></p>
        <?endif;?>
    </span>
  </div>
  
  <br></br>

  <div style="border: 0px solid black;">
    <table>
      <tr style="font-weight:bold; color:#333333; background:#F0F0F0; text-shadow:0 1px 1px #FFFFFF;">
        <td>Package</td>
        <td>Online Version</td>
        <td>Downloaded Version</td>
      </tr>
      <tr style="font-weight:bold; background:#FFFFFF;">
        <td>YAMJ Stable</td>
        <td>
          <?if ($fnl_server=="0"):?>
            <?if ($fnl_online_exist=="0"):?>
              <span class="green-text">v<?=$fnl_online_ver;?> r<?=$fnl_online_rev;?></span>
            <?else:?>
              <span class="red-text">No online stable version</span>
            <?endif;?>
          <?else:?>
            <span class="red-text">OFFLINE</span>
          <?endif;?>
        </td>
        <td>
          <?if ($fnl_down_ver!="no_down_loc"):?>
            <?if ($fnl_down_ver!="no_fnl_down"):?>
              <span class="green-text">v<?=$fnl_down_ver;?></span>
            <?else:?>
              <span class="red-text">No downloaded stable version</span>
            <?endif;?>
          <?else:?>
            <span class="red-text">Download location does not exist</span>
          <?endif;?>
        </td>
      </tr>
      <tr style="font-weight:bold; background:#FFFFFF;">
        <td>YAMJ Snapshot</td>
        <td>
          <?if ($snp_server=="0"):?>
            <?if ($snp_online_exist=="0"):?>
              <span class="green-text">v<?=$snp_online_ver;?> r<?=$snp_online_rev;?></span>
            <?else:?>
              <span class="red-text">No online snapshot version</span>
            <?endif;?>
          <?else:?>
            <span class="red-text">OFFLINE</span>
          <?endif;?>
        </td>
        <td>
          <?if ($snp_down_ver!="no_down_loc"):?>
            <?if ($snp_down_ver!="no_snp_down"):?>
              <span class="green-text">v<?=$snp_down_ver;?> r<?=$snp_down_rev;?></span>
            <?else:?>
              <span class="red-text">No downloaded snapshot version</span>
            <?endif;?>
          <?else:?>
            <span class="red-text">Download location does not exist</span>
          <?endif;?>
        </td>
      </tr>
      <tr style="font-weight:bold; background:#FFFFFF;">
        <td>YAMJ Plugin</td>
        <td>
          <?if ($plg_server=="0"):?>
            <?if ($plg_online_exist=="0"):?>
              <span class="green-text">v<?=$plg_online_ver;?></span>
            <?else:?>
              <span class="red-text">No online plugin</span>
            <?endif;?>
          <?else:?>
            <span class="red-text">OFFLINE</span>
          <?endif;?>
        </td>
        <td>
          <?if ($plg_loc_ver!="no_local_plg"):?>
            <span class="green-text">v<?=$plg_loc_ver;?></span>
          <?else:?>
            <span class="red-text">No local plugin</span>
          <?endif;?>
        </td>
      </tr>
    </table>

    <p>Stable version taken from <u><a href="http://code.google.com/p/moviejukebox/" target="_blank">MovieJukebox on Googlecode</a></u></p>
    <p>Snapshot version taken from <u><a href="http://mediaplayersite.com/YAMJ_Latest" target="_blank">YAMJ on Omertron's Media Player Site</a></u></p>

  </div>

  <div id="title">
    <span class="left">Actions</span>
  </div>

  <br></br>

  <div>
    <table>
      <tr style="font-weight:bold; color:#333333; background:#F0F0F0; text-shadow:0 1px 1px #FFFFFF;">
        <td colspan="2">Control Actions</td>
      </tr>
      <?if ($loc_ver != "no_local_ver"):?>
        <tr>
          <td width="30%">
            <form name="runscript" method="POST" action="/update.htm" target="progressFrame">
              <input type="hidden" name="cmd" value="/etc/rc.d/rc.yamj runscript">
              <input type="submit" name="runCmd" value="Run YAMJ">
            </form>
          </td>
          <td>Run YAMJ script in background now</td>
        </tr>
        <?$control_actions_exist = "true"?>
      <?endif;?>
      <?if ($control_actions_exist=="false"):?>
        <tr>
          <td colspan="2" align="center">No Control Actions available</td>
        </tr>
      <?endif;?>
    </table>
  </div>

  <br></br>

  <div style="border: 0px solid black;">
    <table>
      <tr style="font-weight:bold; color:#333333; background:#F0F0F0; text-shadow:0 1px 1px #FFFFFF;">
        <td colspan="2">Version Actions</td>
      </tr>
      <?if (($fnl_online_exist=="0") && ($fnl_down_ver!=$fnl_online_ver)):?>
        <tr>
		      <td width="30%">
            <form name="downloadfnl" method="POST" action="/update.htm" target="progressFrame">
              <input type="hidden" name="cmd" value="/etc/rc.d/rc.yamj downloadfnl">
              <input type="submit" name="runCmd" value="Download Lateset Stable">
            </form>
          </td>
          <td>Stable ONLINE version different than Stable LOCAL version</td>
		    </tr>
        <?$version_actions_exist="true"?>
      <?endif;?>
      <?if (($snp_online_exist=="0") && ($snp_down_rev!=$snp_online_rev)):?>
        <tr>
		      <td width="30%">
            <form name="downloadsnp" method="POST" action="/update.htm" target="progressFrame">
              <input type="hidden" name="cmd" value="/etc/rc.d/rc.yamj downloadsnp">
              <input type="submit" name="runCmd" value="Download Lateset Snapshot">
            </form>
          </td>
          <td>Snapshot ONLINE version different than Snapshot LOCAL version</td>
		    </tr>
        <?$version_actions_exist="true"?>
      <?endif;?>
      <?if (($plg_online_exist=="0") && ($plg_online_ver!=$plg_loc_ver)):?>
        <tr>
          <td width="30%">
            <form name="updateplg" method="POST" action="/update.htm" target="progressFrame">
              <input type="hidden" name="cmd" value="/etc/rc.d/rc.yamj updateplg">
              <input type="submit" name="runCmd" value="Update Plugin">
            </form>
          </td>
          <td>ONLINE Plugin version different than LOCAL Plugin version</td>
        </tr>
        <?$version_actions_exist="true"?>
      <?endif;?>
      <?if ($version_actions_exist=="false"):?>
        <tr>
          <td colspan="2" align="center">No Version Actions available</td>
        </tr>
      <?endif;?>
    </table>
  </div>

</div>
    
<div style="width: 49%; float:right; border: 0px solid black;">

  <div id="title">
    <span class="left">Configuration</span>
  </div>

  <div>
    <form name="yamj_settings" method="POST" action="/plugins/yamj/yamj_submit.php" target="progressFrame">
      <table>
        <tr>
          <td colspan="2" align="center">
            <input type="submit" value="Save Below Configuration & Implement Immediately">
            <button type="button" onClick="done();">Return to unRAID Settings Page</button>
          </td>
        </tr>
        <tr style="font-weight:bold; color:#333333; background:#F0F0F0; text-shadow:0 1px 1px #FFFFFF;">
          <td colspan="2">Mount and Startup options</td>
        </tr>
        <tr>
          <td>Check & Update Plugin during array mount:</td>
          <td>
            <select name="upgrade_plg_on_boot" size="1">
              <?=mk_option($yamj_cfg['UPGRADE_PLG_ON_BOOT'], "true", "Yes");?>
              <?=mk_option($yamj_cfg['UPGRADE_PLG_ON_BOOT'], "false", "No");?>
            </select>
          </td>
        </tr>
        <tr>
          <td>Download Latest YAMJ Stable version during array mount:</td>
          <td>
            <select name="yamj_down_stable_on_boot" size="1">
              <?=mk_option($yamj_cfg['YAMJ_DOWN_STABLE_ON_BOOT'], "true", "Yes");?>
              <?=mk_option($yamj_cfg['YAMJ_DOWN_STABLE_ON_BOOT'], "false", "No");?>
            </select>
          </td>
        </tr>
        <tr>
          <td>Download Latest YAMJ Snapshot version during array mount:</td>
          <td>
            <select name="yamj_down_snapshot_on_boot" size="1">
              <?=mk_option($yamj_cfg['YAMJ_DOWN_SNAPSHOT_ON_BOOT'], "true", "Yes");?>
              <?=mk_option($yamj_cfg['YAMJ_DOWN_SNAPSHOT_ON_BOOT'], "false", "No");?>
            </select>
          </td>
        </tr>
        <tr>
          <td>Add CRON job for YAMJ during array mount:</td>
          <td>
            <select name="yamj_add_cron_on_boot" size="1">
              <?=mk_option($yamj_cfg['YAMJ_ADD_CRON_ON_BOOT'], "true", "Yes");?>
              <?=mk_option($yamj_cfg['YAMJ_ADD_CRON_ON_BOOT'], "false", "No");?>
            </select>
          </td>
        </tr>
      </table>
      <br></br>
      <table>
        <tr style="font-weight:bold; color:#333333; background:#F0F0F0; text-shadow:0 1px 1px #FFFFFF;">
          <td colspan="2">YAMJ Settings</td>
        </tr>
        <tr>
          <td>YAMJ folder (existing installation):</td>
          <td><input type="text" name="yamj_location" style="width: 17em;" maxlength="255" value="<?=$yamj_cfg['YAMJ_LOCATION'];?>"></td>
        </tr>
        <tr>
          <td>YAMJ download folder (Will move existing files):</td>
          <td><input type="text" name="yamj_download_location" style="width: 17em;" maxlength="255" value="<?=$yamj_cfg['YAMJ_DOWNLOAD_LOCATION'];?>"></td>
        </tr>
        <tr style="font-weight:bold; color:#333333; background:#F0F0F0; text-shadow:0 1px 1px #FFFFFF;">
          <td colspan="2">Schedule YAMJ Scan Settings</td>
        </tr>
        <tr>
          <td>Script used for running YAMJ scan:</td>
          <td><input type="text" name="yamj_run_script" style="width: 17em;" maxlength="255" value="<?=$yamj_cfg['YAMJ_RUN_SCRIPT'];?>"></td>
        </tr>
        <tr>
          <td>Log file to output YAMJ scan (use <i>/dev/null</i> for no log):</td>
          <td><input type="text" name="yamj_run_script_out" style="width: 17em;" maxlength="255" value="<?=$yamj_cfg['YAMJ_RUN_SCRIPT_OUT'];?>"></td>
        </tr>
        <tr>
          <td colspan="2">- To remove scheduled YAMJ scan clear all fields below</td>
        </tr>
        <tr>
          <td colspan="2">- <u><a href="http://en.wikipedia.org/wiki/Cron#CRON_expression" target="_blank">See here for options</a></u></td>
        </tr>
        <tr>
          <td colspan="2" align="center">
            Minutes: <input type="text" name="yamj_cron_min" style="width: 3em;" maxlength="10" value="<?=$yamj_cfg['YAMJ_CRON_MIN'];?>">
            Hours: <input type="text" name="yamj_cron_hour" style="width: 3em;" maxlength="10" value="<?=$yamj_cfg['YAMJ_CRON_HOUR'];?>">
            Days: <input type="text" name="yamj_cron_day" style="width: 3em;" maxlength="10" value="<?=$yamj_cfg['YAMJ_CRON_DAY'];?>">
            Months: <input type="text" name="yamj_cron_month" style="width: 3em;" maxlength="10" value="<?=$yamj_cfg['YAMJ_CRON_MONTH'];?>">
            Weekdays: <input type="text" name="yamj_cron_weekday" style="width: 3em;" maxlength="10" value="<?=$yamj_cfg['YAMJ_CRON_WEEKDAY'];?>">
          </td>
        </tr>
      </table>
    </form>
  </div>

</div>

<br></br>

</BODY>
</HTML>

]]>
</INLINE>
</FILE>

############################################
# WEBUI Submit page
############################################
<FILE Name="/usr/local/emhttp/plugins/yamj/yamj_submit.php">
<INLINE>
<![CDATA[

<?PHP
parse_str($argv[1], $_GET);

$upgrade_plg_on_boot = $_GET['upgrade_plg_on_boot'];
$yamj_down_stable_on_boot = $_GET['yamj_down_stable_on_boot'];
$yamj_down_snapshot_on_boot = $_GET['yamj_down_snapshot_on_boot'];
$yamj_add_cron_on_boot = $_GET['yamj_add_cron_on_boot'];
$yamj_cron_min = $_GET['yamj_cron_min'];
$yamj_cron_hour = $_GET['yamj_cron_hour'];
$yamj_cron_day = $_GET['yamj_cron_day'];
$yamj_cron_month = $_GET['yamj_cron_month'];
$yamj_cron_weekday = $_GET['yamj_cron_weekday'];
$yamj_location = $_GET['yamj_location'];
$yamj_download_location = $_GET['yamj_download_location'];
$yamj_run_script = $_GET['yamj_run_script'];
$yamj_run_script_out = $_GET['yamj_run_script_out'];

$arguments = "";
$arguments .= "UPGRADE_PLG_ON_BOOT_NEW=\"$upgrade_plg_on_boot\"\n";
$arguments .= "YAMJ_DOWN_STABLE_ON_BOOT_NEW=\"$yamj_down_stable_on_boot\"\n";
$arguments .= "YAMJ_DOWN_SNAPSHOT_ON_BOOT_NEW=\"$yamj_down_snapshot_on_boot\"\n";
$arguments .= "YAMJ_ADD_CRON_ON_BOOT_NEW=\"$yamj_add_cron_on_boot\"\n";
$arguments .= "YAMJ_CRON_MIN_NEW=\"$yamj_cron_min\"\n";
$arguments .= "YAMJ_CRON_HOUR_NEW=\"$yamj_cron_hour\"\n";
$arguments .= "YAMJ_CRON_DAY_NEW=\"$yamj_cron_day\"\n";
$arguments .= "YAMJ_CRON_MONTH_NEW=\"$yamj_cron_month\"\n";
$arguments .= "YAMJ_CRON_WEEKDAY_NEW=\"$yamj_cron_weekday\"\n";
$arguments .= "YAMJ_LOCATION_NEW=\"$yamj_location\"\n";
$arguments .= "YAMJ_DOWNLOAD_LOCATION_NEW=\"$yamj_download_location\"\n";
$arguments .= "YAMJ_RUN_SCRIPT_NEW=\"$yamj_run_script\"\n";
$arguments .= "YAMJ_RUN_SCRIPT_OUT_NEW=\"$yamj_run_script_out\"\n";

echo "Please wait while updating configuration...";

$file = "/usr/local/emhttp/plugins/yamj/yamj.args";
file_put_contents($file, $arguments);
shell_exec("/etc/rc.d/rc.yamj updatecfg");
?>

<HTML>
<HEAD><SCRIPT>var goback=parent.location;</SCRIPT></HEAD>
<BODY onLoad="parent.location=goback;"</BODY>
</HTML>

]]>
</INLINE>
</FILE>

</PLUGIN>
